# THIS FILE WAS AUTOGENERATED BY k8s_node.sh
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-hub-1
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: premium-rwo
  resources:
    requests:
      storage: 800Gi
---
apiVersion: v1
kind: ReplicationController
metadata:
  generation: 1
  name: hub-1
  namespace: default
spec:
  replicas: 1
  selector:
    app: hub-1
  template:
    metadata:
      name: hub-1
      labels:
        app: hub-1
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - gke-hub-mainnet-archi-chain-node-pool-11ee333e-tpt9
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "app"
                  operator: In
                  values:
                  - hub-1
            topologyKey: "kubernetes.io/hostname"
      volumes:
        - name: pv-hub-1
          persistentVolumeClaim:
            claimName: pvc-hub-1
      containers:
      - name: hub-1
        image: ghcr.io/strangelove-ventures/heighliner/gaia:v6.0.3
        imagePullPolicy: Always
        ports:
          - containerPort: 1234
            hostPort: 31234
            protocol: TCP
            name: privval
          - containerPort: 1317
            hostPort: 1317
            protocol: TCP
            name: api
          - containerPort: 8080
            hostPort: 8080
            protocol: TCP
            name: rosetta
          - containerPort: 9090
            hostPort: 9090
            protocol: TCP
            name: grpc
          - containerPort: 26660
            hostPort: 26660
            protocol: TCP
            name: prometheus
          - containerPort: 26656
            protocol: TCP
            name: p2p
            hostPort: 26656
          - containerPort: 26657
            protocol: TCP
            name: rpc
            hostPort: 26657
          - containerPort: 9091
            hostPort: 9091
            protocol: TCP
            name: web
        volumeMounts:
          - name: pv-hub-1
            mountPath: /home/heighliner
        command:
          - /bin/sh
          - -c
          - |
            CHAIN_DIR=/home/heighliner/.gaia

            if [ ! -d $CHAIN_DIR ]; then
              # Initialize config
              CHAIN_ID=cosmoshub-4
              gaiad config chain-id $CHAIN_ID --home $CHAIN_DIR
              gaiad config keyring-backend test --home $CHAIN_DIR
              gaiad config broadcast-mode block --home $CHAIN_DIR
              gaiad init chain-node --home $CHAIN_DIR --chain-id=$CHAIN_ID

              CONFIG_DIR=$CHAIN_DIR/config

              # Get Genesis JSON
              wget -O - https://github.com/cosmos/mainnet/raw/master/genesis.$CHAIN_ID.json.gz | gunzip -c > $CONFIG_DIR/genesis.json

              RPC_PEER=34.102.4.160:26657

              STATUS=$(curl -s $RPC_PEER/status)

              LATEST_HEIGHT=$(echo $STATUS | jq -r '.result.sync_info.latest_block_height')
              LATEST_TIME=$(echo $STATUS | jq -r '.result.sync_info.latest_block_time')
              LATEST_TIME_SECONDS=$(date +%s -d "$(echo "${LATEST_TIME::-11}" |  sed 's/T/ /')")
              echo "Latest height: $LATEST_HEIGHT, time seconds: $LATEST_TIME_SECONDS"

              DELTA_BLOCKS=1000

              DELTA_HEIGHT=$(($LATEST_HEIGHT-$DELTA_BLOCKS))
              DELTA_HEIGHT_REQ=$(curl -s $RPC_PEER/block?height=$DELTA_HEIGHT)
              DELTA_HASH=$(echo $DELTA_HEIGHT_REQ | jq -r '.result.block_id.hash')
              DELTA_TIME=$(echo $DELTA_HEIGHT_REQ | jq -r '.result.block.header.time')
              DELTA_TIME_SECONDS=$(date +%s -d "$(echo "${DELTA_TIME::-11}" |  sed 's/T/ /')")
              echo "Delta time seconds: $DELTA_TIME_SECONDS"

              SECONDS_PER_BLOCK=$(awk "BEGIN{printf \"%.02f\", ($LATEST_TIME_SECONDS-$DELTA_TIME_SECONDS)/$DELTA_BLOCKS }")

              echo "Seconds per block: $SECONDS_PER_BLOCK"

              UNBONDING_DAYS=21

              UNBONDING_PERIOD_BLOCKS=$(awk "BEGIN{printf \"%.0f\", $UNBONDING_DAYS * 86400 / $SECONDS_PER_BLOCK }")

              echo "Unbonding period blocks: $UNBONDING_PERIOD_BLOCKS"

              PRUNING_PADDING=1000

              BLOCKS_TO_KEEP=$(awk "BEGIN { print int((($UNBONDING_PERIOD_BLOCKS + $PRUNING_PADDING) / $DELTA_BLOCKS) + 0.5) * $DELTA_BLOCKS }")

              echo "Will retain $BLOCKS_TO_KEEP blocks"

              TRUST_HEIGHT=$DELTA_HEIGHT
              TRUST_HASH=$DELTA_HASH
              echo "Fetching Snapshot Height $TRUST_HEIGHT"
              echo "Using trust height $TRUST_HEIGHT and trust hash $TRUST_HASH"

              RPC_SERVERS="$RPC_PEER,$RPC_PEER"
              PERSISTENT_PEERS="d97f186a3e9579bd70d9e26d0836063382e4462f@34.102.4.160:26656,2593c71b798260bffda5a6912c2bc5a9d146906d@107.178.208.25:26656"
              MINIMUM_GAS_PRICE="0.0025uatom"

              # config.toml
              CONFIG_FILE=$CONFIG_DIR/config.toml
              sed -i '/^enable = false/ s//enable = true/' $CONFIG_FILE # enable state sync
              sed -i "/^trust_height = .*/ s//trust_height = $TRUST_HEIGHT/" $CONFIG_FILE
              sed -i "/^trust_hash = .*/ s//trust_hash = \"$TRUST_HASH\"/" $CONFIG_FILE
              sed -i "/^rpc_servers = .*/ s//rpc_servers = \"$RPC_SERVERS\"/" $CONFIG_FILE
              sed -i '/^indexer = .*/ s//indexer = "kv"/' $CONFIG_FILE
              sed -i "/^persistent_peers = .*/ s//persistent_peers = \"$PERSISTENT_PEERS\"/" $CONFIG_FILE
              sed -i "/^external_address = .*/ s//external_address = \"$(curl -s ifconfig.me):26656\"/" $CONFIG_FILE
              sed -i '/^max_num_inbound_peers = .*/ s//max_num_inbound_peers = 80/' $CONFIG_FILE
              sed -i '/^laddr = "tcp:\/\/127.0.0.1:26657"/ s//laddr = "tcp:\/\/0.0.0.0:26657"/' $CONFIG_FILE
              #sed -i '/^db_backend = .*/ s//db_backend = "rocksdb"/' $CONFIG_FILE

              # app.toml
              APP_FILE=$CONFIG_DIR/app.toml
              sed -i '/^pruning = .*/ s//pruning = "custom"/' $APP_FILE
              sed -i "/^pruning-keep-recent = .*/ s//pruning-keep-recent = \"$BLOCKS_TO_KEEP\"/" $APP_FILE
              sed -i "/^pruning-keep-every = .*/ s//pruning-keep-every = \"0\"/" $APP_FILE
              sed -i "/^pruning-interval = .*/ s//pruning-interval = \"17\"/" $APP_FILE
              sed -i "/^minimum-gas-prices = .*/ s//minimum-gas-prices = \"$MINIMUM_GAS_PRICE\"/" $APP_FILE
              #sed -i '/^enable = false/ s//enable = true/' $APP_FILE # enable api
              #sed -i '/^enabled = false/ s//enabled = true/' $APP_FILE # enable telemetry

              SNAPSHOT_INTERVAL=1000
              SNAPSHOT_KEEP_RECENT=2

              sed -i "/^snapshot-interval = .*/ s//snapshot-interval = $SNAPSHOT_INTERVAL/" $APP_FILE
              sed -i "/^snapshot-keep-recent = .*/ s//snapshot-keep-recent = $SNAPSHOT_KEEP_RECENT/" $APP_FILE
            fi

            # sleep 30

            gaiad start --x-crisis-skip-assert-invariants

      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
